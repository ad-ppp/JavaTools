import org.gradle.api.internal.artifacts.configurations.DefaultConfiguration

apply plugin: 'java'

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation project(':base-tool-lib')
}

project.afterEvaluate {
    def canBeResolvedField = DefaultConfiguration.class.getDeclaredField('canBeResolved')
    canBeResolvedField.setAccessible(true)
    canBeResolvedField.set(configurations.implementation, true)
}

jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'

    manifest {
        attributes 'Manifest-Version': '1.0.0'
        attributes 'Author': 'jacky'
    }

    from {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        configurations.implementation.resolve().collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
    from {
        exclude 'META-INF/MANIFEST.MF'
        exclude 'META-INF/*.SF'
        exclude 'META-INF/*.DSA'
        exclude 'META-INF/*.RSA'
        configurations.runtime.resolve().collect {
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from "${project.buildDir}/libs/${project.name}.jar"
    into "${project.rootProject.getRootDir()}/tools/lib/"
}

task release(type: Copy, dependsOn: [build, clearJar, copyJar])
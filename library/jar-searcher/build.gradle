apply plugin: 'application'
apply plugin: 'java'

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    // 一定要是compile模式，否则打包jar的时候，configurations.compile没有值
    compile project(':base-tool-lib')
}

ext {
    javaMainClass = "com.jacky.tools.JarSearcher"
}

application {
    mainClassName = javaMainClass
}

jar {
    manifestContentCharset 'utf-8'
    metadataCharset 'utf-8'

    manifest {
        attributes 'Main-Class': "${mainClassName}"
        attributes 'Manifest-Version': '1.0.3'
        attributes 'Author': 'jacky'
    }

    from {
        configurations.compile.collect {
            println "compile it path: ${it.getAbsolutePath()}"
            it.isDirectory() ? it : zipTree(it)
        }
    }
}

task clearJar(type: Delete) {
    delete 'build/libs/lib'
}

task copyJar(type: Copy) {
    from "${project.buildDir}/libs/${project.name}.jar"
    into "${project.rootProject.getRootDir()}/tools/"
}

task release(type: Copy, dependsOn: [build, clearJar, copyJar])

// run JarSearcher#main
task runMain(type: JavaExec) {
    group = "Execution"
    description = "Run the main class with JavaExecTask"
    classpath = sourceSets.main.runtimeClasspath
    main = javaMainClass
}